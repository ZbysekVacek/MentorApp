openapi: 3.0.3
info:
  title: MentorApp internal API
  version: 1.0.0
  description: Internal API specification
paths:
  /api/app-settings/:
    get:
      operationId: app_settings_list
      tags:
      - app-settings
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppSettings'
          description: ''
  /api/competency/all:
    get:
      operationId: competency_all_list
      tags:
      - competency
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competency'
          description: ''
  /api/connections:
    get:
      operationId: connections_list
      tags:
      - connections
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConnectionListItem'
          description: ''
  /api/connections/{id}/delete:
    delete:
      operationId: connections_delete_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - connections
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/connections/requests:
    get:
      operationId: connections_requests_list
      tags:
      - connections
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConnectionRequest'
          description: ''
  /api/connections/requests/{id}:
    delete:
      operationId: connections_requests_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - connections
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/connections/requests/{id}/accept:
    post:
      operationId: connections_requests_accept_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - connections
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/connections/requests/make:
    post:
      operationId: connections_requests_make_create
      tags:
      - connections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionRequestCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConnectionRequestCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConnectionRequestCreateRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionRequestCreate'
          description: ''
  /api/meeting/:
    get:
      operationId: meeting_list
      tags:
      - meeting
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Meeting'
          description: ''
  /api/meeting/{id}/delete:
    delete:
      operationId: meeting_delete_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - meeting
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/meeting/{id}/update:
    put:
      operationId: meeting_update_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - meeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MeetingCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MeetingCreateRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingCreate'
          description: ''
    patch:
      operationId: meeting_update_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - meeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMeetingCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMeetingCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMeetingCreateRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingCreate'
          description: ''
  /api/meeting/create/:
    post:
      operationId: meeting_create_create
      tags:
      - meeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MeetingCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MeetingCreateRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingCreate'
          description: ''
  /api/meeting/from-mentors:
    get:
      operationId: meeting_from_mentors_list
      tags:
      - meeting
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Meeting'
          description: ''
  /api/mentoring/{id}/:
    get:
      operationId: mentoring_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - mentoring
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mentoring'
          description: ''
  /api/mentoring/{id}/delete/:
    delete:
      operationId: mentoring_delete_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - mentoring
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/mentoring/{id}/edit/:
    put:
      operationId: mentoring_edit_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - mentoring
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MentoringRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MentoringRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MentoringRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mentoring'
          description: ''
    patch:
      operationId: mentoring_edit_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - mentoring
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMentoringRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMentoringRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMentoringRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mentoring'
          description: ''
  /api/mentoring/as-mentee/:
    get:
      operationId: mentoring_as_mentee_list
      tags:
      - mentoring
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Mentoring'
          description: ''
  /api/mentoring/as-mentor/:
    get:
      operationId: mentoring_as_mentor_list
      tags:
      - mentoring
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Mentoring'
          description: ''
  /api/mentoring/requests/accept/{mentoring_request_id}/:
    delete:
      operationId: mentoring_requests_accept_destroy
      parameters:
      - in: path
        name: mentoring_request_id
        schema:
          type: integer
        required: true
      tags:
      - mentoring
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/mentoring/requests/create/{to_user_id}/:
    post:
      operationId: mentoring_requests_create_create
      parameters:
      - in: path
        name: to_user_id
        schema:
          type: integer
        required: true
      tags:
      - mentoring
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateRequestRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRequest'
          description: ''
  /api/mentoring/requests/delete/{id}/:
    delete:
      operationId: mentoring_requests_delete_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - mentoring
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/mentoring/requests/from-user/:
    get:
      operationId: mentoring_requests_from_user_list
      tags:
      - mentoring
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestForMentoring'
          description: ''
  /api/mentoring/requests/to-user/:
    get:
      operationId: mentoring_requests_to_user_list
      tags:
      - mentoring
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestForMentoring'
          description: ''
  /api/messages/all/:
    get:
      operationId: messages_all_list
      tags:
      - messages
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
          description: ''
  /api/messages/all-users/:
    get:
      operationId: messages_all_users_list
      tags:
      - messages
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
  /api/messages/mark-seen/:
    put:
      operationId: messages_mark_seen_update
      tags:
      - messages
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: messages_mark_seen_partial_update
      tags:
      - messages
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/messages/send/:
    post:
      operationId: messages_send_create
      tags:
      - messages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageSendRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MessageSendRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MessageSendRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageSend'
          description: ''
  /api/messages/unseen/:
    get:
      operationId: messages_unseen_list
      tags:
      - messages
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
          description: ''
  /api/notes/:
    get:
      operationId: notes_list
      tags:
      - notes
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
          description: ''
    post:
      operationId: notes_create
      tags:
      - notes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NoteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NoteRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/notes/{id}/:
    get:
      operationId: notes_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - notes
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: notes_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - notes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NoteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NoteRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: notes_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - notes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNoteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNoteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNoteRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/notes/{id}/delete/:
    delete:
      operationId: notes_delete_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - notes
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/notifications:
    get:
      operationId: notifications_get_all
      description: Lists all notifications for the current user
      tags:
      - notifications
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'
          description: ''
  /api/notifications/mark-as-seen:
    get:
      operationId: notifications_mark_as_seen
      description: Marks all unseen notifications as seen for logged in user
      tags:
      - notifications
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: User is not logged in
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: Generic server error
        '200':
          description: Notifications were marked as seen
  /api/notifications/unseen:
    get:
      operationId: notifications_get_unseen
      description: Lists all NOT SEEN notifications for the current user
      tags:
      - notifications
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'
          description: ''
  /api/posts/:
    get:
      operationId: posts_list
      tags:
      - posts
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
          description: ''
  /api/posts/create/:
    post:
      operationId: posts_create_create
      tags:
      - posts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostCreateRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostCreate'
          description: ''
  /api/posts/delete/{id}/:
    delete:
      operationId: posts_delete_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - posts
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/tasks/:
    get:
      operationId: tasks_list
      tags:
      - tasks
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
          description: ''
    post:
      operationId: tasks_create
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
  /api/tasks/{id}/:
    get:
      operationId: tasks_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - tasks
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    put:
      operationId: tasks_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    patch:
      operationId: tasks_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTaskRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTaskRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTaskRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
  /api/tasks/{id}/delete:
    delete:
      operationId: tasks_delete_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - tasks
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/tasks/assigned/:
    get:
      operationId: tasks_assigned_list
      tags:
      - tasks
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
          description: ''
  /api/user/{id}:
    get:
      operationId: user_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - user
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/user/{user_id}/profile:
    get:
      operationId: user_profile_retrieve
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - user
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    put:
      operationId: user_profile_update
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProfileRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    patch:
      operationId: user_profile_partial_update
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProfileRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
  /api/user/{user_id}/profile/avatar:
    put:
      operationId: user_profile_avatar_update
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - user
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProfileAvatarRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProfileAvatarRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileAvatar'
          description: ''
    patch:
      operationId: user_profile_avatar_partial_update
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - user
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProfileAvatarRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProfileAvatarRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileAvatar'
          description: ''
  /api/user/current:
    get:
      operationId: user_current_retrieve
      tags:
      - user
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/user/login:
    post:
      operationId: user_login_create
      description: Provides user login
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoginRequestRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: User was logged in
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: Wrong credentials
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: Generic server error
  /api/user/logout:
    post:
      operationId: user_logout_create
      description: Logouts user from the system
      tags:
      - user
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: User was logged out
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: Generic server error
  /api/user/register:
    post:
      operationId: register_user
      description: |-
        Endpoint for user registration

        Creates both User and related Profile models
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegisterRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegisterRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegisterRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          description: User was registered
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
          description: Validation error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: Generic server error
  /api/user/search:
    get:
      operationId: user_search_list
      tags:
      - user
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
  /api/user/search/{competency_ids}/:
    get:
      operationId: user_search_list_2
      parameters:
      - in: path
        name: competency_ids
        schema:
          type: string
        required: true
      tags:
      - user
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    AppSettings:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          $ref: '#/components/schemas/TypeEnum'
        content:
          type: string
      required:
      - content
      - type
    Competency:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
      required:
      - name
    ConnectionListItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        to:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
    ConnectionRequest:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        from_user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        to_user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
    ConnectionRequestCreate:
      type: object
      properties:
        to_user:
          type: integer
        from_user:
          type: integer
      required:
      - from_user
      - to_user
    ConnectionRequestCreateRequest:
      type: object
      properties:
        to_user:
          type: integer
        from_user:
          type: integer
      required:
      - from_user
      - to_user
    CreateRequest:
      type: object
      properties:
        text:
          type: string
      required:
      - text
    CreateRequestRequest:
      type: object
      properties:
        text:
          type: string
          minLength: 1
      required:
      - text
    Exception:
      type: object
      properties:
        status_code:
          type: integer
        detail:
          type: string
    FollowupEnum:
      enum:
      - FILL_PROFILE
      - MENTORING_REQUESTS_PAGE
      - MENTORINGS_PAGE
      - CONNECTION_PAGE
      - NONE
      type: string
      description: |-
        * `FILL_PROFILE` - Fill your user profile
        * `MENTORING_REQUESTS_PAGE` - See mentoring requests
        * `MENTORINGS_PAGE` - See mentoring page
        * `CONNECTION_PAGE` - See connections page
        * `NONE` - No followup action
    LoginRequestRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
        password:
          type: string
          minLength: 1
      required:
      - password
      - username
    Meeting:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        author:
          $ref: '#/components/schemas/User'
        registered_mentee:
          $ref: '#/components/schemas/User'
        title:
          type: string
          maxLength: 240
        location:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Created Date
        meeting_date:
          type: string
          format: date-time
        description:
          type: string
      required:
      - author
      - description
      - location
      - meeting_date
      - registered_mentee
      - title
    MeetingCreate:
      type: object
      properties:
        meeting_date:
          type: string
          format: date-time
        description:
          type: string
        location:
          type: string
        registered_mentee:
          type: integer
          nullable: true
        title:
          type: string
          maxLength: 240
      required:
      - description
      - location
      - meeting_date
      - title
    MeetingCreateRequest:
      type: object
      properties:
        meeting_date:
          type: string
          format: date-time
        description:
          type: string
          minLength: 1
        location:
          type: string
          minLength: 1
        registered_mentee:
          type: integer
          nullable: true
        title:
          type: string
          minLength: 1
          maxLength: 240
      required:
      - description
      - location
      - meeting_date
      - title
    Mentoring:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        connection:
          type: integer
        settings:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        frequency_days:
          type: integer
        objectives:
          type: string
          nullable: true
        mentor:
          $ref: '#/components/schemas/User'
        mentee:
          $ref: '#/components/schemas/User'
        active:
          type: boolean
      required:
      - connection
      - frequency_days
      - mentee
      - mentor
    MentoringRequest:
      type: object
      properties:
        connection:
          type: integer
        settings:
          type: string
          nullable: true
        frequency_days:
          type: integer
        objectives:
          type: string
          nullable: true
        mentor:
          $ref: '#/components/schemas/UserRequest'
        mentee:
          $ref: '#/components/schemas/UserRequest'
        active:
          type: boolean
      required:
      - connection
      - frequency_days
      - mentee
      - mentor
    Message:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        content:
          type: string
        send_at:
          type: string
          format: date-time
          readOnly: true
        seen:
          type: boolean
        sender:
          type: integer
        recipient:
          type: integer
      required:
      - content
      - recipient
      - sender
    MessageSend:
      type: object
      properties:
        recipient:
          type: integer
        content:
          type: string
      required:
      - content
      - recipient
    MessageSendRequest:
      type: object
      properties:
        recipient:
          type: integer
        content:
          type: string
          minLength: 1
      required:
      - content
      - recipient
    Note:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        author:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        summary:
          type: string
          maxLength: 255
        content:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        related_meeting:
          type: integer
          nullable: true
        related_mentoring:
          type: integer
          nullable: true
      required:
      - content
      - summary
      - title
    NoteRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        summary:
          type: string
          minLength: 1
          maxLength: 255
        content:
          type: string
          minLength: 1
        related_meeting:
          type: integer
          nullable: true
        related_mentoring:
          type: integer
          nullable: true
      required:
      - content
      - summary
      - title
    Notification:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        source:
          type: string
          nullable: true
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        seen:
          type: boolean
        title:
          type: string
          maxLength: 255
        followup:
          $ref: '#/components/schemas/FollowupEnum'
        content:
          type: string
          maxLength: 255
        user:
          type: integer
      required:
      - content
      - title
      - user
    PatchedMeetingCreateRequest:
      type: object
      properties:
        meeting_date:
          type: string
          format: date-time
        description:
          type: string
          minLength: 1
        location:
          type: string
          minLength: 1
        registered_mentee:
          type: integer
          nullable: true
        title:
          type: string
          minLength: 1
          maxLength: 240
    PatchedMentoringRequest:
      type: object
      properties:
        connection:
          type: integer
        settings:
          type: string
          nullable: true
        frequency_days:
          type: integer
        objectives:
          type: string
          nullable: true
        mentor:
          $ref: '#/components/schemas/UserRequest'
        mentee:
          $ref: '#/components/schemas/UserRequest'
        active:
          type: boolean
    PatchedNoteRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        summary:
          type: string
          minLength: 1
          maxLength: 255
        content:
          type: string
          minLength: 1
        related_meeting:
          type: integer
          nullable: true
        related_mentoring:
          type: integer
          nullable: true
    PatchedProfileAvatarRequest:
      type: object
      properties:
        avatar:
          type: string
          format: binary
          nullable: true
          pattern: (?:jpg|jpeg|png)$
    PatchedProfileRequest:
      type: object
      properties:
        accepts_mentees:
          type: boolean
        about:
          type: string
          minLength: 1
        contact:
          type: string
          minLength: 1
        skills:
          type: string
          minLength: 1
        user:
          type: integer
        avatar:
          type: string
          format: binary
          nullable: true
          pattern: (?:jpg|jpeg|png)$
        competencies:
          type: array
          items:
            type: integer
    PatchedTaskRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          minLength: 1
        resolved:
          type: boolean
        resolved_at:
          type: string
          format: date-time
          nullable: true
        response:
          type: string
          nullable: true
        assignee:
          type: integer
        related_mentoring:
          type: integer
          nullable: true
    Post:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        author:
          $ref: '#/components/schemas/User'
        created_at:
          type: string
          format: date-time
          readOnly: true
        content:
          type: string
        title:
          type: string
          maxLength: 255
      required:
      - author
      - content
      - title
    PostCreate:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        content:
          type: string
      required:
      - content
      - title
    PostCreateRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        content:
          type: string
          minLength: 1
      required:
      - content
      - title
    Profile:
      type: object
      properties:
        accepts_mentees:
          type: boolean
        about:
          type: string
        contact:
          type: string
        skills:
          type: string
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        avatar:
          type: string
          format: uri
          nullable: true
          pattern: (?:jpg|jpeg|png)$
        competencies:
          type: array
          items:
            type: integer
      required:
      - competencies
      - user
    ProfileAvatar:
      type: object
      properties:
        avatar:
          type: string
          format: uri
          nullable: true
          pattern: (?:jpg|jpeg|png)$
    ProfileAvatarRequest:
      type: object
      properties:
        avatar:
          type: string
          format: binary
          nullable: true
          pattern: (?:jpg|jpeg|png)$
    ProfileRequest:
      type: object
      properties:
        accepts_mentees:
          type: boolean
        about:
          type: string
          minLength: 1
        contact:
          type: string
          minLength: 1
        skills:
          type: string
          minLength: 1
        user:
          type: integer
        avatar:
          type: string
          format: binary
          nullable: true
          pattern: (?:jpg|jpeg|png)$
        competencies:
          type: array
          items:
            type: integer
      required:
      - competencies
      - user
    RequestForMentoring:
      type: object
      description: |-
        Serializer for the MentoringRequest model.
        Cannot use MentoringRequestSerializer because it for some reason generates duplicate name in openapi schema.
      properties:
        id:
          type: integer
          readOnly: true
        from_user:
          $ref: '#/components/schemas/User'
        to_user:
          $ref: '#/components/schemas/User'
        created_at:
          type: string
          format: date-time
          readOnly: true
        text:
          type: string
      required:
      - from_user
      - text
      - to_user
    Task:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        resolved:
          type: boolean
        resolved_at:
          type: string
          format: date-time
          nullable: true
        response:
          type: string
          nullable: true
        author:
          type: integer
          readOnly: true
        assignee:
          type: integer
        related_mentoring:
          type: integer
          nullable: true
      required:
      - assignee
      - description
      - title
    TaskRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          minLength: 1
        resolved:
          type: boolean
        resolved_at:
          type: string
          format: date-time
          nullable: true
        response:
          type: string
          nullable: true
        assignee:
          type: integer
        related_mentoring:
          type: integer
          nullable: true
      required:
      - assignee
      - description
      - title
    TypeEnum:
      enum:
      - APP_NAME
      - INDEX_CONTENT
      - HOMEPAGE_CONTENT
      - ABOUT_CONTENT
      type: string
      description: |-
        * `APP_NAME` - Name of the application. Defaults to MentorApp
        * `INDEX_CONTENT` - Content of the index page. You can use markdown
        * `HOMEPAGE_CONTENT` - Content of the homepage (shown after successful login to app). You can use markdown
        * `ABOUT_CONTENT` - Content of the about page. You can use markdown
    User:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        id:
          type: integer
          readOnly: true
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        profile:
          allOf:
          - $ref: '#/components/schemas/Profile'
          readOnly: true
      required:
      - username
    UserRegisterRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
          minLength: 1
          maxLength: 128
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - password
      - username
    UserRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
      required:
      - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
